apiVersion: apps/v1
apiVersion: apps/v1
kind: Deployment
metadata:
  name: miw-customerwebapp
spec:
  replicas: 1
  minReadySeconds: 10
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: miw-customerwebapp-pod
      tier: frontend
      track: stable
  template:
    metadata:
      labels:
        app: miw-customerwebapp-pod
        tier: frontend
        track: stable
    spec:
      containers:
        - name: miw-customerwebapp-container
          image: docker.io/lars14/miw-customerwebapp:release0.0.8
          imagePullPolicy: Always

---

apiVersion: v1
kind: Service
metadata:
  name: miw-customerwebapp
  labels:
    app: miw-customerwebapp
    service: miw-customerwebapp
spec: 
  selector:
    app: miw-customerwebapp-pod
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: LoadBalancer

---

apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: miw-customerwebapp-autoscaler
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: miw-customerwebapp
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 15
  


---



apiVersion: apps/v1
kind: Deployment
metadata:
  name: miw-customergateway
spec:
  replicas: 1
  minReadySeconds: 10
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: miw-customergateway-pod 
  template:
    metadata:
      labels:
        app: miw-customergateway-pod
    spec:
      containers:
        - name: miw-customergateway-container
          image: docker.io/lars14/miw-customergateway:release0.0.10
          imagePullPolicy: Always
          ports:
            - containerPort: 5002
              protocol: TCP

---

apiVersion: v1
kind: Service
metadata:
  name: miw-customergateway
spec: 
  selector:
    app: miw-customergateway-pod
  ports:
    - protocol: TCP
      port: 5002
      targetPort: 5002
  type: LoadBalancer

---

apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: miw-customergateway-autoscaler
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: miw-customergateway
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 15



---



apiVersion: apps/v1
kind: Deployment
metadata:
  name: miw-customerauthservice
spec:
  replicas: 1
  minReadySeconds: 10
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: miw-customerauthservice-pod 
  template:
    metadata:
      labels:
        app: miw-customerauthservice-pod
    spec:
      containers:
        - name: miw-customerauthservice-container
          image: docker.io/lars14/miw-customerauthservice:release0.0.5
          imagePullPolicy: Always
          ports:
            - containerPort: 5004
              protocol: TCP

---

apiVersion: v1
kind: Service
metadata:
  name: miw-customerauthservice
spec: 
  selector:
    app: miw-customerauthservice-pod
  ports:
    - protocol: TCP
      port: 5004
      targetPort: 5004
  type: LoadBalancer

---

apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: miw-customerauthservice-autoscaler
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: miw-customerauthservice
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 15



---



apiVersion: apps/v1
kind: Deployment
metadata:
  name: miw-productservice
spec:
  replicas: 1
  minReadySeconds: 10
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: miw-productservice-pod 
  template:
    metadata:
      labels:
        app: miw-productservice-pod
    spec:
      containers:
        - name: miw-productservice-container
          image: docker.io/lars14/miw-productservice:release0.0.4:
          imagePullPolicy: Always
          ports:
            - containerPort: 5010
              protocol: TCP

---

apiVersion: v1
kind: Service
metadata:
  name: miw-productservice
spec: 
  selector:
    app: miw-productservice-pod
  ports:
    - protocol: TCP
      port: 5010
      targetPort: 5010
  type: LoadBalancer

---

apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: miw-productservice-autoscaler
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: miw-productservice
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 15



---



apiVersion: apps/v1
kind: Deployment
metadata:
  name: miw-recommendationsservice
spec:
  replicas: 1
  minReadySeconds: 10
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: miw-recommendationsservice-pod 
  template:
    metadata:
      labels:
        app: miw-recommendationsservice-pod
    spec:
      containers:
        - name: miw-recommendationsservice-container
          image: docker.io/lars14/miw-recommendationsservice:release0.0.4:
          imagePullPolicy: Always
          ports:
            - containerPort: 5012
              protocol: TCP

---

apiVersion: v1
kind: Service
metadata:
  name: miw-recommendationsservice
spec: 
  selector:
    app: miw-recommendationsservice-pod
  ports:
    - protocol: TCP
      port: 5012
      targetPort: 5012
  type: LoadBalancer

---

apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: miw-recommendationsservice-autoscaler
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: miw-productservice
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 15
