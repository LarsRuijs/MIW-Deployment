apiVersion: apps/v1
kind: Deployment
metadata:
  name: miw-customerwebapp
spec:
  replicas: 1
  minReadySeconds: 10
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: miw-customerwebapp-pod
      tier: frontend
      track: stable
  template:
    metadata:
      labels:
        app: miw-customerwebapp-pod
        tier: frontend
        track: stable
    spec:
      containers:
        - name: miw-customerwebapp-container
          image: docker.io/lars14/miw-customerwebapp:release0.0.7
          imagePullPolicy: Always

---

apiVersion: v1
kind: Service
metadata:
  name: miw-customergateway
  labels:
    app: miw-customergateway
    service: miw-customergateway
spec: 
  selector:
    app: miw-customergateway-pod
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: LoadBalancer

---

apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: miw-customerwebapp-autoscaler
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: miw-customerwebapp
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 75
  


---



# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: miw-customergateway
# spec:
#   replicas: 1
#   minReadySeconds: 10
#   strategy:
#     type: RollingUpdate
#     rollingUpdate:
#       maxSurge: 1
#       maxUnavailable: 1
#   selector:
#     matchLabels:
#       app: miw-customergateway-pod 
#   template:
#     metadata:
#       labels:
#         app: miw-customergateway-pod
#     spec:
#       containers:
#         - name: miw-customergateway-container
#           image: docker.io/lars14/miw-customergateway:release0.0.9
#           imagePullPolicy: Always
#           ports:
#             - containerPort: 5003
#               protocol: TCP

# ---

# apiVersion: v1
# kind: Service
# metadata:
#   name: miw-customergateway
# spec: 
#   selector:
#     app: miw-customergateway-pod
#   ports:
#     - protocol: TCP
#       port: 5003
#       targetPort: 5003
#   type: LoadBalancer

# ---

# apiVersion: autoscaling/v1
# kind: HorizontalPodAutoscaler
# metadata:
#   name: miw-customergateway-autoscaler
# spec:
#   scaleTargetRef:
#     apiVersion: apps/v1
#     kind: Deployment
#     name: miw-customergateway
#   minReplicas: 1
#   maxReplicas: 5
#   targetCPUUtilizationPercentage: 75



# ---



# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: miw-customerauthservice
# spec:
#   replicas: 1
#   minReadySeconds: 10
#   strategy:
#     type: RollingUpdate
#     rollingUpdate:
#       maxSurge: 1
#       maxUnavailable: 1
#   selector:
#     matchLabels:
#       app: miw-customerauthservice-pod 
#   template:
#     metadata:
#       labels:
#         app: miw-customerauthservice-pod
#     spec:
#       containers:
#         - name: miw-customerauthservice-container
#           image: docker.io/lars14/miw-customerauthservice:release0.0.4
#           imagePullPolicy: Always
#           ports:
#             - containerPort: 5005
#               protocol: TCP

# ---

# apiVersion: v1
# kind: Service
# metadata:
#   name: miw-customerauthservice
# spec: 
#   selector:
#     app: miw-customerauthservice-pod
#   ports:
#     - protocol: TCP
#       port: 5005
#       targetPort: 5005
#   type: LoadBalancer

# ---

# apiVersion: autoscaling/v1
# kind: HorizontalPodAutoscaler
# metadata:
#   name: miw-customerauthservice-autoscaler
# spec:
#   scaleTargetRef:
#     apiVersion: apps/v1
#     kind: Deployment
#     name: miw-customerauthservice
#   minReplicas: 1
#   maxReplicas: 5
#   targetCPUUtilizationPercentage: 75
